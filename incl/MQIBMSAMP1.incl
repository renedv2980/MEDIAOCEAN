*          DATA SET MQIBMSAMP1 AT LEVEL 002 AS OF 03/06/03                      
CSQ4BAA1 TITLE 'MQSeries SAMPLE MESSAGE PRINT PROGRAM - ASSEMBLER'              
***********************************************************************         
* PRODUCT NUMBER : 5695-137                                           *         
*                                                                     *         
* MODULE NAME    : CSQ4BAA1                                           *         
*                                                                     *         
* ENVIRONMENT    : MVS Batch; BAL                                     *         
*                                                                     *         
* DESCRIPTION    : Sample Program to print messages from a            *         
*                  specified queue.                                   *         
*                                                                     *         
* @START_COPYRIGHT@                                                   *         
*   Statement:     Licensed Materials - Property of IBM               *         
*                                                                     *         
*                  5695-137                                           *         
*                  (C) Copyright IBM Corporation. 1993, 1996          *         
*                                                                     *         
*   Status:        Version 1 Release 1                                *         
* @END_COPYRIGHT@                                                     *         
*                                                                     *         
* FUNCTION       : This program prints a report showing all the       *         
*                  messages in a specified queue in the specified     *         
*                  queue manager.                                     *         
*                                                                     *         
*                  The program processes the first 80 bytes only of   *         
*                  each message. It uses the BROWSE option on the     *         
*                  MQGET call to ensure that data is not lost         *         
*                                                                     *         
* PARAMETERS     : Standard MVS passing of parameters.                *         
*                  This program expects two parameters delimited      *         
*                  by a comma                                         *         
*                                                                     *         
*                  PARM1 = Name of the queue manager to connect to.   *         
*                  PARM2 = Name of the queue to be printed            *         
*                                                                     *         
* REGISTERS      :                                                    *         
*                  R0  - Work register                                *         
*                  R1  - Work register                                *         
*                  R2  - Work register                                *         
*                  R3  - Work register                                *         
*                  R4  - Work register                                *         
*                  R5  - Length for executes                          *         
*                  R6  - Branch for main routines                     *         
*                  R7  - Branch for sub routines                      *         
*                  R8  - Page format routine                          *         
*                  R9  - Write SYSPRINT routine                       *         
*                  R10 - Address work area                            *         
*                  R11 - Base register                                *         
*                  R12 - Second base register                         *         
*                  R13 - Address of register save area                *         
*                  R14 - Return address/work register                 *         
*                  R15 - Work register/return code                    *         
*                                                                     *         
***********************************************************************         
*                                                                     *         
* EXECUTABLE MACROS                                                   *         
*                                                                     *         
*    CALL    -  To execute MQCONN, MQOPEN, MQGET, MQCLOSE, MQDISC     *         
*              -  Needs ',MF=(E,CALLLIST)' to enable code to be       *         
*                 reentrant                                           *         
*              -  Needs ',VL' so diagnostic facilities                *         
*                 know how long the parameter list is.                *         
*                                                                     *         
*    SAVE    - To save register contents                              *         
*                                                                     *         
*    GETMAIN - To get storage                                         *         
*                                                                     *         
*    TIME    - To get current date                                    *         
*                                                                     *         
***********************************************************************         
         EJECT                                                                  
********************************************************************            
*                                                                               
*                         Program logic                                         
*                         -------------                                         
*        CSQ4BAA1 CSECT                                                         
*        --------------                                                         
*                                                                               
*           Save registers                                                      
*           Establish addressability                                            
*           Get working storage                                                 
*           Branch to MAIN                                                      
*                                                                               
*        MAIN                                                                   
*        ----                                                                   
*           Call MAININIT                                                       
*           Call MAINPARM                                                       
*           Call MAINCONN                                                       
*           Call MAINMSGS                                                       
*           Call MAINDISC                                                       
*           Call ENDPROG                                                        
*                                                                               
*        MAININIT                                                               
*        --------                                                               
*           Open SYSPRINT file                                                  
*           Get and initialize storage                                          
*                                                                               
*        MAINPARM                                                               
*        --------                                                               
*           Obtain the input data from parameters passed                        
*                                                                               
*           If the name of the queue manager is missing                         
*              Build a warning message and move it into data line               
*              Print the line (using PRTLINE)                                   
*              Continue (using default queue manager name)                      
*           End-if                                                              
*                                                                               
*           If the name of the queue is missing                                 
*              Build an error message and move it into data line                
*              Print the line (using PRTLINE)                                   
*              Branch to ENDPROG                                                
*           End-if                                                              
*                                                                               
*        MAINCONN                                                               
*        --------                                                               
*           Connect to the queue manager                                        
*           If an error occurs                                                  
*              Build an error message and move it into data line                
*              Print the line (using PRTLINE)                                   
*              Branch to Exit2                                                  
*           End-if                                                              
*                                                                               
*        MAINMSGS                                                               
*        --------                                                               
*           Open the queue                                                      
*           If an error occurs                                                  
*              Build an error message and move it into data line                
*              Print the line (using PRTLINE)                                   
*              Branch to Exit1                                                  
*           End-if                                                              
*                                                                               
*           Do while no error                                                   
*                                                                               
*              Add 1 to relative message number                                 
*              Move message into print line (maximum 80 bytes)                  
*              Print the line (using PRTLINE)                                   
*                                                                               
*              Get the message (using BROWSE-NEXT option)                       
*                                                                               
*           End-do                                                              
*                                                                               
*           When an error occurs                                                
*              If no more messages                                              
*                 Do nothing                                                    
*              else                                                             
*                 Build an error message and move it into data line             
*                 Print the line (using PRTLINE)                                
*              End-if                                                           
*           End-if                                                              
*                                                                               
*           Close the queue                                                     
*           If an error occurs                                                  
*              Build an error message and move it into data line                
*              Print the line (using PRTLINE)                                   
*           End-if                                                              
*                                                                               
*        MAINDISC                                                               
*        --------                                                               
*           Disconnect from the queue manager                                   
*           If an error occurs                                                  
*              Build an error message and move it into data line                
*              Print the line (using PRTLINE)                                   
*           End-if                                                              
*                                                                               
*        ENDPROG                                                                
*        -------                                                                
*           Print end report message                                            
*           Close output file                                                   
*           Restore registers                                                   
*           Return to caller                                                    
*                                                                               
*        PUTREC                                                                 
*        ------                                                                 
*           Put the output record to SYSPRINT                                   
*                                                                               
*        PRINTHDR                                                               
*        --------                                                               
*           Add 1 to page number                                                
*           Print first line after jumping to top of page                       
*           Set number of lines printed to 1                                    
*           Return to calling section                                           
*                                                                               
*        PRTLINE                                                                
*        -------                                                                
*           If number of lines printed is greater than page maximum             
*              Print first line of header (Perform PRINTHDR)                    
*              Print the rest of the header (Perform PRINTHDG)                  
*           End-if                                                              
*           Print data line                                                     
*           Add 1 to count of lines printed                                     
*           Return to calling section                                           
*                                                                               
*        PRINTHDG                                                               
*        --------                                                               
*           Print remaining header lines                                        
*           Return to calling section                                           
*                                                                               
*        ERRCODE                                                                
*        -------                                                                
*           Convert compcode to displayable format                              
*           Convert reason to displayable format                                
*           Print the error message                                             
*           Return to calling section                                           
*                                                                               
***********************************************************************         
         EJECT                                                                  
***********************************************************************         
*        REGISTERs                                                    *         
***********************************************************************         
R0       EQU   0                                                                
R1       EQU   1                                                                
R2       EQU   2                                                                
R3       EQU   3                                                                
R4       EQU   4                                                                
R5       EQU   5                                                                
R6       EQU   6                                                                
R7       EQU   7                                                                
R8       EQU   8                                                                
R9       EQU   9                                                                
R10      EQU   10                                                               
R11      EQU   11                                                               
R12      EQU   12                                                               
R13      EQU   13                                                               
R14      EQU   14                                                               
R15      EQU   15                                                               
***********************************************************************         
*  MQ API CONSTANTS                                                   *         
***********************************************************************         
         CMQA LIST=NO                                                           
***********************************************************************         
*  DSECTS USED BY THIS PROGRAM                                        *         
***********************************************************************         
WORKAREA DSECT                                                                  
*                                                                               
PARMLIST CALL ,(0,0,0,0,0,0,0,0,0,0,0),VL,MF=L                                  
*                                                                               
PRTREC   DS    0CL133                       Output data record                  
PRTCC    DS    CL1                          Carriage control                    
PRTDATA  DS    CL132                        Data                                
SKIPLINE DS    CL1                          Carriage control store              
*                                                                               
WORKDWRD DS    D                            Used for data conversion            
PAGENUM  DS    F                            Page number counter                 
LINENUM  DS    F                            Line number printed                 
MSGNUM   DS    F                            Message count number                
DATALENGTH DS  F                            Actual message length               
OPTIONS  DS    F                            Options                             
COMPCODE DS    F                            Completion code                     
REASON   DS    F                            Reason code                         
HCONN    DS    F                            Connection handle                   
HOBJ     DS    F                            Connection handle                   
OBJECT   DS    F                            Object handle                       
EXITCODE DS    F                            Exit return code                    
TIMEDATE DS    0CL6                         Used for data conversion            
DATECONV DS    0CL6                         Used for data conversion            
         ORG   DATECONV                                                         
         DS    CL1                                                              
DATE_YR  DS    CL2                          The year                            
DATE_JN  DS    CL3                          The Julian date                     
         ORG                                                                    
PARMADDR DS    F                            Address of parm field               
PARMLEN  DS    H                            Length of parm field                
*                                                                               
MQMNAME  DS    CL48                         Queue manager name                  
MQMQUEUE DS    CL48                         Queue name                          
*                                                                               
MSGDATA  DS    CL132                        Used by print routine               
DSPCOMP  DS    CL04                         Display compcode                    
DSPREAS  DS    CL04                         Display reaon                       
DSPMSGL  DS    CL08                         Display message length              
CONVAREA DS    CL8                          Used for data conversion            
*                                                                               
BUFFER   DS    CL80                         Target for message                  
WORKLEN  EQU   *-WORKAREA                                                       
         EJECT                                                                  
**********************************************************************          
* START OF PROGRAM                                                   *          
**********************************************************************          
CSQ4BAA1 CSECT                                                                  
CSQ4BAA1 AMODE 31                                                               
         SAVE  (14,12)                      Save register                       
         LR    R11,R15                      Set program                         
         LA    R12,4095(R11)                Set up second base                  
         LA    R12,1(R12)                                                       
         USING CSQ4BAA1,R11,R12             Addressability                      
         ST    R13,SAVEAREA+4               Backward pointer                    
         LR    R2,R13                       Save in R2                          
         LA    R13,SAVEAREA                 Set addr of out savearea            
         ST    R13,8(,R2)                   Forward savearea                    
         ST    R1,PARMSAVE                  Save parmlist                       
         GETMAIN RU,LV=WORKLEN,LOC=(RES,ANY) Get some storage                   
         LR    R10,R1                       Address of storage                  
         USING WORKAREA,R10                 Set addressability                  
         B     MAIN                         Branch to MAIN process              
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : MAIN                                             *            
*                                                                  *            
*  FUNCTION     : Controls flow of program                         *            
*                                                                  *            
*  CALLED BY    : CSQ4BAA1 CSECT                                   *            
*                                                                  *            
*  CALLS        : MAININIT, MAINPARM, MAINCONN, MAINMSGS, MAINDISC *            
*                 ENDPROG                                          *            
*                                                                  *            
********************************************************************            
MAIN     DS    0H                                                               
         BAL   R6,MAININIT                  Initialize storage                  
         BAL   R6,MAINPARM                  Reads the parms                     
         BAL   R6,MAINCONN                  Connect to qmgr                     
         BAL   R6,MAINMSGS                  Gets messages from queue            
         BAL   R6,MAINDISC                  Disconnect from qmgr                
         B     ENDPROG                      Terminate program                   
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : MAININIT                                         *            
*                                                                  *            
*  FUNCTION     : Performs initialization                          *            
*                                                                  *            
*  CALLED BY    : MAIN                                             *            
*                                                                  *            
*  CALLS        : PRINTHDR                                         *            
*                                                                  *            
*  RETURN       : To Register 6                                    *            
*                                                                  *            
********************************************************************            
MAININIT DS    0H                                                               
         OPEN  (SYSPRINT),MF=(E,PRINTOPN),MODE=31                               
*                                                                               
         TIME  DEC,ZONE=LT                                                      
*                                                                               
         ST    R1,TIMEDATE                  Julian date in packed dec           
         UNPK  DATECONV,TIMEDATE+1(3)       To unsigned zoned                   
         MVZ   DATECONV+5(1),DATECONV+4     Decimal                             
         MVC   DATEYR,DATE_YR               Move date - year                    
         MVC   DATEJN,DATE_JN               Move date - Julian                  
*                                                                               
         XR    R0,R0                        Zero register                       
         ST    R0,PAGENUM                   Zero page number                    
         ST    R0,MSGNUM                    Zero message number                 
         ST    R0,LINENUM                   Zero line number                    
         ST    R0,EXITCODE                  Default return code                 
         BAL   R7,PRINTHDR                  Write print headings                
         BR    R6                                                               
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : MAINPARM                                         *            
*                                                                  *            
*  FUNCTION     : Read the parameters passed to the program, and   *            
*                 incorrect number of parameters passed            *            
*                                                                  *            
*  CALLED BY    : MAIN                                             *            
*                                                                  *            
*  CALLS        : PRINTHDG, PRTLINE                                *            
*                                                                  *            
*  RETURN       : Normal to Register 6                             *            
*                 Error  to ENDPROG                                *            
*                                                                  *            
********************************************************************            
MAINPARM DS    0H                                                               
         MVI   MQMNAME,X'40'                Space out first byte                
         MVC   MQMNAME+1(L'MQMNAME-1),MQMNAME  and initialize                   
         MVI   MQMQUEUE,X'40'               Space out first byte                
         MVC   MQMQUEUE+1(L'MQMQUEUE-1),MQMQUEUE  and initialize                
*                                                                               
         L     R1,PARMSAVE                  Address of parm list                
         L     R1,0(R1)                     Address of first parm               
         LH    R5,0(R1)                     Length of parm                      
         STH   R5,PARMLEN                   Save away                           
         LTR   R5,R5                        any data passed                     
         BZ    NOPARMS                      No names passed                     
*                                                                               
TRANPARM DS    0H                                                               
         LA    R3,2(R1)                     Advance to start of parm            
         LR    R2,R5                        Load length and reduce              
         BCTR  R2,R0                        for execute                         
         EX    R2,TRANSCAN                  Scan variable bytes                 
         BC    4,TWOPARMS                   Comma imbedded in text              
         B     NOPARM2                      No .. issue error                   
*                                                                               
TWOPARMS DS    0H                                                               
         ST    R1,PARMADDR                  Address of the comma                
         CR    R1,R3                        Is comma first char                 
         BNE   PARM1MVE                     No then no default qmgr             
         BCTR  R5,R0                        Reduce length                       
         MVI   HDR2_QMN,C' '                Space out first byte                
         MVC   HDR2_QMN+1(L'HDR2_QMN-1),HDR2_QMN  and initialize                
         MVC   MSGDATA,INF2                 Move in the message                 
         BAL   R8,PRTLINE                   and print the line                  
         L     R0,LINENUM                   Current line number                 
         LA    R0,1(R0)                     Add one and                         
         ST    R0,LINENUM                   save again                          
         LA    R0,4                         Set return code                     
         ST    R0,EXITCODE                  ready for exit                      
         L     R1,PARMADDR                  Load Addr of Comma                  
         LA    R4,MQMQUEUE                  addr of the queue                   
         BCTR  R5,R0                        reduce length for execute           
         EX    R5,ONLYPARM                  parameter                           
         B     ENDPARMS                     exit from parms                     
*                                                                               
PARM1MVE DS    0H                                                               
         SR    R1,R3                        Length of data                      
         LA    R4,MQMNAME                   Address for target                  
         BCTR  R1,R0                        Reduce for execute                  
         EX    R1,MOVEPARM                  Move the data                       
         LA    R3,2(R1,R3)                  past first parm + comma             
         LH    R2,PARMLEN                   Original length                     
         LA    R1,2(R1)                     Add two to R1                       
         SR    R2,R1                        Length of second parm               
         LR    R1,R2                        Load length for move                
*                                                                               
PARM2MVE DS    0H                                                               
         LA    R4,MQMQUEUE                  Address of target                   
         BCTR  R1,R0                        Reduce for execute                  
         EX    R1,MOVEPARM                  Move second parm                    
         B     ENDPARMS                     Exit from parms                     
*                                                                               
NOPARM2  DS    0H                                                               
         MVC   MSGDATA,INF3                 Move in the message                 
         BAL   R8,PRTLINE                   and print the line                  
         LA    R0,4                         Set return code                     
         ST    R0,EXITCODE                  ready for exit                      
         B     ENDPROG                      End the program                     
*                                                                               
NOPARMS  DS    0H                                                               
         MVC   MSGDATA,INF1                 Move message to buffer              
         BAL   R8,PRTLINE                   Write the record                    
         LA    R0,4                         Set return code                     
         ST    R0,EXITCODE                  ready for exit                      
         B     ENDPROG                      End the program                     
*                                                                               
ENDPARMS DS    0H                                                               
         BAL   R7,PRINTHDG                  Print rest of headings              
         BR    R6                           Return to caller                    
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : MAINCONN                                         *            
*                                                                  *            
*  FUNCTION     : Connect to the queue manager                     *            
*                                                                  *            
*  CALLED BY    : MAIN                                             *            
*                                                                  *            
*  CALLS        : ERRCODE                                          *            
*                                                                  *            
*  RETURN       : Normal to Register 6                             *            
*                 Error  to ENDPROG                                *            
*                                                                  *            
********************************************************************            
MAINCONN DS    0H                                                               
         XC    HCONN,HCONN                  Null connection handle              
*                                                                               
         CALL  MQCONN,                                                 X        
               (MQMNAME,                                               X        
               HCONN,                                                  X        
               COMPCODE,                                               X        
               REASON),                                                X        
               MF=(E,PARMLIST),VL                                               
*                                                                               
         LA    R0,MQCC_OK                   Expected compcode                   
         C     R0,COMPCODE                  As expected ?                       
         BER   R6                           Yes .. return to caller             
*                                                                               
         MVC   INF4_TYP,=CL10'CONNECT   '                                       
         BAL   R7,ERRCODE                   Translate error                     
         LA    R0,8                         Set exit code                       
         ST    R0,EXITCODE                  to 8                                
         B     ENDPROG                      End the program                     
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : MAINMSGS                                         *            
*                                                                  *            
*  FUNCTION     : Read the messages from the queue                 *            
*                                                                  *            
*  CALLED BY    : MAIN                                             *            
*                                                                  *            
*  CALLS        : ERRCODE, PRTLINE                                 *            
*                                                                  *            
*  RETURN       : to Register 6                                    *            
*                                                                  *            
********************************************************************            
MAINMSGS DS    0H                                                               
         LA    R0,MQOT_Q                    Object is a queue                   
         ST    R0,OBJDESC_OBJECTTYPE        In object type field                
         MVC   OBJDESC_OBJECTNAME,MQMQUEUE  Move queue name                     
         LA    R0,MQOO_BROWSE               Indicate open is                    
         ST    R0,OPTIONS                   Browse only                         
*                                                                               
         CALL MQOPEN,                                                  X        
               (HCONN,                                                 X        
               OBJDESC,                                                X        
               OPTIONS,                                                X        
               HOBJ,                                                   X        
               COMPCODE,                                               X        
               REASON),                                                X        
               MF=(E,PARMLIST),VL                                               
*                                                                               
         LA    R0,MQCC_OK                   Expected compcode                   
         C     R0,COMPCODE                  As expected?                        
         BE    MSGSINIT                     Yes .. continue                     
         MVC   INF4_TYP,=CL10'OPEN      '                                       
         BAL   R7,ERRCODE                   Translate error                     
         LA    R0,8                         Set exit code                       
         ST    R0,EXITCODE                  to 8                                
         BR    R6                           Return to disconnect from           
*                                           qmgr and terminate program          
*                                                                               
MSGSINIT DS    0H                                                               
         LA    R0,MQGMO_BROWSE_NEXT+MQGMO_ACCEPT_TRUNCATED_MSG                  
         ST    R0,GETMSGOPTS_OPTIONS        Indicate get options                
*                                                                               
*-------------------------------------------------------------------*           
* Code segment which gets the message from the requested queue.     *           
*-------------------------------------------------------------------*           
MSGSGETS DS    0H                                                               
         XC    MSGDESC_CORRELID,MSGDESC_CORRELID  Null correlation id           
         XC    MSGDESC_MSGID,MSGDESC_MSGID        Null message id               
         MVC   BUFFER,MSGCLEAR                    Blank buffer                  
*                                                                               
         CALL  MQGET,                                                  X        
               (HCONN,                                                 X        
               HOBJ,                                                   X        
               MSGDESC,                                                X        
               GETMSGOPTS,                                             X        
               BUFFERLENGTH,                                           X        
               BUFFER,                                                 X        
               DATALENGTH,                                             X        
               COMPCODE,                                               X        
               REASON),                                                X        
               MF=(E,PARMLIST),VL                                               
*                                                                               
         LA    R0,MQCC_OK                   Load compcode MQCC_OK               
         C     R0,COMPCODE                  As expected?                        
         BE    MSGSPRNT                     Yes .. print message                
*                                                                               
         LA    R0,MQCC_WARNING              Load compcode MQCC_WARNING          
         C     R0,COMPCODE                  As expected                         
         BE    MSGSPRNT                     Yes .. print message                
*                                                                               
         LA    R0,MQRC_NO_MSG_AVAILABLE     No more message?                    
         C     R0,REASON                    Yes .. then close                   
         BE    MSGSCLOS                     Otherwise must be                   
         B     MSGSERR                      an error                            
*                                                                               
MSGSPRNT DS    0H                                                               
         LA    R0,MQRC_TRUNCATED_MSG_ACCEPTED Was the warning because           
         C     R0,REASON                    message was too long?               
         BE    GETMSGS                      Yes .. get the message              
         LA    R0,MQRC_NONE                 Was it ok?                          
         C     R0,REASON                                                        
         BE    GETMSGS                      Yes .. get the message              
         B     MSGSERR                      Its unacceptable                    
*                                                                               
*-------------------------------------------------------------------*           
* Code segment which prints the message                             *           
*-------------------------------------------------------------------*           
GETMSGS  DS    0H                                                               
         L     R1,MSGNUM                    Load current msg number             
         LA    R1,1(R1)                     Increment it by 1                   
         ST    R1,MSGNUM                    Save back for next time             
*                                                                               
         CVD   R1,WORKDWRD                  To packed decimal                   
         UNPK  CONVAREA,WORKDWRD+4(4)       Convert to zoned decimal            
         MVZ   CONVAREA+7(1),CONVAREA+6     Make it displayable                 
         MVC   REP1_MGN,CONVAREA            Move to display area                
*                                                                               
         L     R5,DATALENGTH                Load length of message              
         CVD   R5,WORKDWRD                  To packed decimal                   
         UNPK  CONVAREA,WORKDWRD+4(4)       Convert to zoned decimal            
         MVZ   CONVAREA+7(1),CONVAREA+6     Make it displayable                 
         MVC   REP1_MGL,CONVAREA            Move to display area                
*                                                                               
         LA    R3,BUFFER                    Addr of source data                 
         LA    R4,REP1_MSG                  Addr of target area                 
         C     R5,BUFFERLENGTH              Message greater than 80             
         BNH   WRITELIN                     Ok to write it                      
         L     R5,BUFFERLENGTH              Reset to maximum                    
*                                                                               
WRITELIN DS    0H                                                               
         MVC   REP1_MSG,MSGCLEAR            Clear the message                   
         C     R5,ZEROREC                   Is message zero length              
         BE    WRITEREP                     Write blank line                    
         BCTR  R5,R0                        Reduce by 1 for execute             
         EX    R5,MOVEDATA                  Move data into output rec           
         B     WRITEREP                     Write the message                   
*                                                                               
WRITEREP DS    0H                                                               
         MVC   MSGDATA,REP1                 Move in the message                 
         BAL   R8,PRTLINE                   Go and print line                   
         L     R1,LINENUM                   Current line number                 
         LA    R1,1(R1)                     Add one                             
         ST    R1,LINENUM                   Save new value                      
         B     MSGSGETS                     Get the next message                
*                                                                               
*-------------------------------------------------------------------*           
* Code segment closes the queue                                     *           
*-------------------------------------------------------------------*           
MSGSCLOS DS    0H                                                               
         LA    R0,MQCO_NONE                 Indicate normal close               
         ST    R0,OPTIONS                   of the queue                        
*                                                                               
         CALL MQCLOSE,                                                 X        
               (HCONN,                                                 X        
               HOBJ,                                                   X        
               OPTIONS,                                                X        
               COMPCODE,                                               X        
               REASON),                                                X        
               MF=(E,PARMLIST),VL                                               
*                                                                               
         LA    R0,MQCC_OK                   Expected compcode                   
         C     R0,COMPCODE                  As expected?                        
         BER   R6                           Yes .. continue                     
         MVC   INF4_TYP,=CL10'CLOSE     '                                       
         BAL   R7,ERRCODE                   Translate error                     
         LA    R0,8                         Set exit code                       
         ST    R0,EXITCODE                  To 8                                
         BR    R6                           Return to caller                    
*                                                                               
MSGSERR  DS    0H                                                               
         MVC   INF4_TYP,=CL10'GET       '                                       
         BAL   R7,ERRCODE                   Translate error                     
         LA    R0,8                         Set exit code                       
         ST    R0,EXITCODE                  To 8                                
         BR    R6                           Return to caller                    
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : MAINDISC                                         *            
*                                                                  *            
*  FUNCTION     : Disconnect from the queue manager                *            
*                                                                  *            
*  CALLED BY    : MAIN                                             *            
*                                                                  *            
*  CALLS        : ERRCODE                                          *            
*                                                                  *            
*  RETURN       : to Register 6                                    *            
*                                                                  *            
********************************************************************            
MAINDISC DS    0H                                                               
         CALL  MQDISC,                                                 X        
               (HCONN,                                                 X        
               COMPCODE,                                               X        
               REASON),                                                X        
               MF=(E,PARMLIST),VL                                               
*                                                                               
         LA    R0,MQCC_OK                   Expected compcode                   
         C     R0,COMPCODE                  As expected?                        
         BER   R6                           Yes .. continue                     
         MVC   INF4_TYP,=CL10'DISCONNECT'                                       
         BAL   R7,ERRCODE                   Translate error                     
         LA    R0,8                         Set exit code                       
         ST    R0,EXITCODE                  To 8                                
         BR    R6                           Return to caller                    
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : ENDPROG                                          *            
*                                                                  *            
*  FUNCTION     : Program termination                              *            
*                                                                  *            
*  CALLED BY    : MAIN                                             *            
*                                                                  *            
*  CALLS        : PRTLINE                                          *            
*                                                                  *            
*  RETURN       : leaves program                                   *            
*                                                                  *            
********************************************************************            
ENDPROG  DS    0H                                                               
         MVC   SKIPLINE,TWOLINES            Skip a line                         
         MVC   MSGDATA,INF0                 End report message                  
         BAL   R8,PRTLINE                   Go and print line                   
         CLOSE (SYSPRINT)                   Close output file                   
         L     R15,EXITCODE                 Load termination code               
         L     R13,4(R13)                   Readdr caller SAVEAREA              
         ST    R15,16(R13)                  Place in return code                
         LM    R14,R12,12(R13)              Restore registers                   
         L     R14,12(,R13)                 Load return address                 
         BR    R14                          Return to caller                    
*                                                                               
         EJECT                                                                  
*********************************************************************           
* SUBROUTINES                                                       *           
*********************************************************************           
*                                                                               
         SPACE 4                                                                
********************************************************************            
*  SECTION NAME : PUTREC                                           *            
*                                                                  *            
*  FUNCTION     : Print a line                                     *            
*                                                                  *            
*  CALLED BY    : PRINTHDR,                                        *            
*                                                                  *            
*  CALLS        : nothing                                          *            
*                                                                  *            
*  RETURN       : to Register 9                                    *            
*                                                                  *            
********************************************************************            
PUTREC   DS    0H                                                               
         LA    R4,THEPUT                    Address of put                      
         BSM   0,R4                         Set correct mode                    
THEPUT   PUT   SYSPRINT,PRTREC              Get buffer address                  
         BSM   0,R9                         Set mode of return                  
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : PRINTHDR                                         *            
*                                                                  *            
*  FUNCTION     : Print first header line                          *            
*                                                                  *            
*  CALLED BY    : MAININIT, PRTLINE                                *            
*                                                                  *            
*  CALLS        : PUTREC                                           *            
*                                                                  *            
*  RETURN       : to Register 7                                    *            
*                                                                  *            
********************************************************************            
PRINTHDR DS    0H                                                               
         LA    R1,1                         Load 1 into register                
         ST    R1,LINENUM                   Reset the line number               
         L     R1,PAGENUM                   Get current page number             
         LA    R1,1(R1)                     Increment by 1                      
         ST    R1,PAGENUM                   Save again                          
*                                                                               
         CVD   R1,WORKDWRD                  To packed decimal                   
         UNPK  CONVAREA,WORKDWRD+4(4)       Convert to zoned decimal            
         MVZ   CONVAREA+7(1),CONVAREA+6     Make it displayable                 
         MVC   HDR1_PGE,CONVAREA+4          Move to display area                
*                                                                               
         MVC   HDR1_DTE,REPDATE             Move in the date                    
         MVC   PRTDATA,HDR1                 Move record to buffer               
         MVC   PRTCC,NEWPAGE                Carriage control to page            
         BAL   R9,PUTREC                    Write the record                    
         BR    R7                                                               
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : PRTLINE                                          *            
*                                                                  *            
*  FUNCTION     : Print the next line                              *            
*                                                                  *            
*  CALLED BY    : MAINPARM, MAINMSGS, ENDPROG, ERRCODE             *            
*                                                                  *            
*  CALLS        : PRINTHDR, PRINTHDG, PUTREC                       *            
*                                                                  *            
*  RETURN       : to Register 8                                    *            
*                                                                  *            
********************************************************************            
PRTLINE  DS    0H                                                               
         L     R1,LINENUM                   Current line number                 
         C     R1,MAXLINES                  Reached max lines                   
         BNH   PRTLINE1                     No need for new page                
         BAL   R7,PRINTHDR                  Print first heading                 
         BAL   R7,PRINTHDG                  Print other headings                
*                                                                               
PRTLINE1 DS    0H                                                               
         MVC   PRTDATA,MSGDATA              Move in the message                 
         MVC   PRTCC,SKIPLINE               Indicate skip lines                 
         BAL   R9,PUTREC                    Write the record                    
         MVC   SKIPLINE,ONELINE             Reset to next line                  
         BR    R8                                                               
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : PRINTHDG                                         *            
*                                                                  *            
*  FUNCTION     : Print the remaining header lines                 *            
*                                                                  *            
*  CALLED BY    : PRTLINE, MAINPARM                                *            
*                                                                  *            
*  CALLS        : PUTREC                                           *            
*                                                                  *            
*  RETURN       : to Register 7                                    *            
*                                                                  *            
********************************************************************            
PRINTHDG DS    0H                                                               
         MVC   HDR2_QMN,MQMNAME                                                 
         MVC   PRTDATA,HDR2                 Second heading line                 
         MVC   PRTCC,TWOLINES               After skip 1 line                   
         BAL   R9,PUTREC                    Go and print line                   
         L     R1,LINENUM                   Current line number                 
         LA    R1,2(R1)                     Add two to line number              
         ST    R1,LINENUM                   Save again                          
*                                                                               
         MVC   HDR3_QUE,MQMQUEUE                                                
         MVC   PRTDATA,HDR3                 Third heading line                  
         MVC   PRTCC,ONELINE                After skip 1 line                   
         BAL   R9,PUTREC                    Go and print line                   
         L     R1,LINENUM                   Current line number                 
         LA    R1,1(R1)                     Add one to line number              
         ST    R1,LINENUM                   Save again                          
*                                                                               
         MVC   PRTDATA,HDR4                 Fourth heading line                 
         MVC   PRTCC,TWOLINES               After skip 1 line                   
         BAL   R9,PUTREC                    Go and print line                   
         L     R1,LINENUM                   Current line number                 
         LA    R1,2(R1)                     Add one to line number              
         ST    R1,LINENUM                   Save again                          
*                                                                               
         MVC   PRTDATA,HDR5                 Fifth heading line                  
         MVC   PRTCC,ONELINE                After skip 1 line                   
         BAL   R9,PUTREC                    Go and print line                   
         L     R1,LINENUM                   Current line number                 
         LA    R1,1(R1)                     Add one to line number              
         ST    R1,LINENUM                   Save again                          
*                                                                               
         MVC   PRTDATA,HDR6                 Second heading line                 
         MVC   PRTCC,TWOLINES               After skip 1 line                   
         BAL   R9,PUTREC                    Go and print line                   
         L     R1,LINENUM                   Current line number                 
         LA    R1,2(R1)                     Add two to line number              
         ST    R1,LINENUM                   Save again                          
*                                                                               
         MVI   PRTDATA,C' '                 Blank line                          
         MVC   PRTDATA+1(L'PRTDATA-1),PRTDATA                                   
         MVC   PRTCC,ONELINE                After skip 1 line                   
         BAL   R9,PUTREC                    Go and print line                   
         L     R1,LINENUM                   Current line number                 
         LA    R1,1(R1)                     Add one to line number              
         ST    R1,LINENUM                   Save again                          
         BR    R7                           Return to caller                    
*                                                                               
         EJECT                                                                  
********************************************************************            
*  SECTION NAME : ERRCODE                                          *            
*                                                                  *            
*  FUNCTION     : Print an error message including compcode and    *            
*                 reason                                           *            
*                                                                  *            
*  CALLED BY    : MAINCONN, MAINMSGS, MAINDISC                     *            
*                                                                  *            
*  CALLS        : PRTLINE                                          *            
*                                                                  *            
*  RETURN       : to Register 7                                    *            
*                                                                  *            
********************************************************************            
ERRCODE  DS    0H                                                               
         L     R0,COMPCODE                  Translate compcode                  
         CVD   R0,WORKDWRD                  To packed decimal                   
         UNPK  CONVAREA,WORKDWRD+4(4)       Convert to zoned decimal            
         MVZ   CONVAREA+7(1),CONVAREA+6     Make it displayable                 
         MVC   INF4_CC,CONVAREA+4           Move to display area                
*                                                                               
         L     R0,REASON                    Translate reason                    
         CVD   R0,WORKDWRD                  To packed decimal                   
         UNPK  CONVAREA,WORKDWRD+4(4)       Convert to zoned decimal            
         MVZ   CONVAREA+7(1),CONVAREA+6     Make it displayable                 
         MVC   INF4_RC,CONVAREA+4           Move to display area                
*                                                                               
         L     R1,LINENUM                   Current line number                 
         LA    R1,1(R1)                     Add one to line number              
         ST    R1,LINENUM                   Save again                          
         MVC   MSGDATA,INF4                 Move in the message                 
         BAL   R8,PRTLINE                   Print the line                      
         BR    R7                           Return to caller                    
*                                                                               
         EJECT                                                                  
*********************************************************************           
* CONSTANTS, DATA STRUCTURES                                        *           
*********************************************************************           
SAVEAREA DS    9D                           Save area                           
PARMSAVE DS    F                            Save area for parms                 
NEWPAGE  DC    C'1'                         New page indicator                  
ONELINE  DC    C' '                         Write next line                     
TWOLINES DC    C'-'                         Write after advance 1               
BUFFERLENGTH DC F'80'                       Buffer size                         
MSGCLEAR DC    CL80' '                      Blank out message                   
MAXLINES DC    F'60'                        Max lines per page                  
ZEROREC  DC    F'0'                         Check for zero length               
*                                                                               
OBJDESC    CMQODA  DSECT=NO,LIST=NO         Object descriptor                   
MSGDESC    CMQMDA  DSECT=NO,LIST=NO         Message descriptor                  
GETMSGOPTS CMQGMOA DSECT=NO,LIST=NO         Get message options                 
*                                                                               
         SPACE 4                                                                
*********************************************************************           
* EXECUTES                                                          *           
*********************************************************************           
ONLYPARM MVC   0(*-*,R4),1(R1)                                                  
MOVEPARM MVC   0(*-*,R4),0(R3)                                                  
MOVEDATA MVC   0(*-*,R4),0(R3)                                                  
TRANSCAN TRT   0(*-*,R3),TRANTAB                                                
*                                                                               
         SPACE 4                                                                
*********************************************************************           
* TRANSLATE TABLE TO SCAN FOR DELIMETER.                            *           
*********************************************************************           
TRANTAB  DS   0CL256                                                            
         ORG  TRANTAB                                                           
         DC   X'00000000000000000000000000000000'     00 - 0F                   
         DC   X'00000000000000000000000000000000'     10 - 1F                   
         DC   X'00000000000000000000000000000000'     20 - 2F                   
         DC   X'00000000000000000000000000000000'     30 - 3F                   
         DC   X'00000000000000000000000000000000'     40 - 4F                   
         DC   X'00000000000000000000000000000000'     50 - 5F                   
         DC   X'00000000000000000000004000000000'     60 - 6F                   
         DC   X'00000000000000000000000000000000'     70 - 7F                   
         DC   X'00000000000000000000000000000000'     80 - 8F                   
         DC   X'00000000000000000000000000000000'     90 - 9F                   
         DC   X'00000000000000000000000000000000'     A0 - AF                   
         DC   X'00000000000000000000000000000000'     B0 - BF                   
         DC   X'00000000000000000000000000000000'     C0 - CF                   
         DC   X'00000000000000000000000000000000'     D0 - DF                   
         DC   X'00000000000000000000000000000000'     E0 - EF                   
         DC   X'00000000000000000000000000000000'     F0 - FF                   
         ORG                                                                    
*                                                                               
         EJECT                                                                  
*********************************************************************           
* FIELDS USED BY PRINT ROUTINE                                      *           
*********************************************************************           
REPDATE  DS    0CL8                                                             
DATEYR   DS    CL02                                                             
DATEF1   DC    CL01'/'                                                          
DATEJN   DS    CL03                                                             
DATEF2   DC    CL02'  '                                                         
*                                                                               
HDR1     DS    0CL132                       First heading line                  
         DC    CL10' '                                                          
HDR1_DTE DS    CL08                                                             
         DC    CL38' '                                                          
         DC    CL19'SAMPLE QUEUE REPORT'                                        
         DC    CL38' '                                                          
         DC    CL05'PAGE '                                                      
HDR1_PGE DS    CL04                                                             
         DC    CL10' '                                                          
*                                                                               
HDR2     DS    0CL132                       Second heading line                 
         DC    CL25' '                                                          
         DC    CL29'MESSAGE QUEUE MANAGER NAME : '                              
HDR2_QMN DS    CL48                                                             
         DC    CL30' '                                                          
*                                                                               
HDR3     DS    0CL132                       Third heading line                  
         DC    CL41' '                                                          
         DC    CL13'QUEUE NAME : '                                              
HDR3_QUE DS    CL48                                                             
         DC    CL30' '                                                          
*                                                                               
HDR4     DS    0CL132                       Fourth heading line                 
         DC    CL12' '                                                          
         DC    CL08'RELATIVE'                                                   
         DC    CL112' '                                                         
*                                                                               
HDR5     DS    0CL132                       Fifth heading line                  
         DC    CL12' '                                                          
         DC    CL07'MESSAGE'                                                    
         DC    CL113' '                                                         
*                                                                               
HDR6     DS    0CL132                       Sixth heading line                  
         DC    CL11' '                                                          
         DC    CL18' NUMBER   LENGTH '                                          
         DC    CL33'---------------------------------'                          
         DC    CL14' MESSAGE DATA '                                             
         DC    CL33'---------------------------------'                          
         DC    CL23' '                                                          
*                                                                               
REP1     DS    0CL132                       First report line                   
         DC    CL11' '                                                          
REP1_MGN DS    CL08                                                             
         DC    CL01' '                                                          
REP1_MGL DS    CL08                                                             
         DC    CL01' '                                                          
REP1_MSG DS    CL80                                                             
         DC    CL20' '                                                          
*                                                                               
INF0     DS    0CL132                                                           
         DC    CL48' '                                                          
         DC    CL35'********** END OF REPORT **********'                        
         DC    CL49' '                                                          
*                                                                               
INF1     DS    0CL132                                                           
         DC    CL10' '                                                          
         DC    CL46'********** NO DATA PASSED TO PROGRAM. PROGRAM '             
         DC    CL46'REQUIRES A QUEUE MANAGER NAME AND A QUEUE NAME'             
         DC    CL30'. **********                  '                             
*                                                                               
INF2     DS    0CL132                                                           
         DC    CL25' '                                                          
         DC    CL46'********** NO QUEUE MANAGER NAME PASSED TO PRO'             
         DC    CL25'GRAM - DEFAULT USED *****'                                  
         DC    CL36' '                                                          
*                                                                               
INF3     DS    0CL132                                                           
         DC    CL38' '                                                          
         DC    CL10'**********'                                                 
         DC    CL34' NO QUEUE NAME PASSED TO PROGRAM. '                         
         DC    CL10'**********'                                                 
         DC    CL40' '                                                          
*                                                                               
INF4     DS    0CL132                                                           
         DC    CL13' '                                                          
         DC    CL32'********** AN ERROR OCCURRED IN '                           
INF4_TYP DS    CL10                                                             
         DC    CL20'. COMPLETION CODE = '                                       
INF4_CC  DS    CL04                                                             
         DC    CL16' REASON CODE = '                                            
INF4_RC  DS    CL04                                                             
         DC    CL33' **********                      '                          
*                                                                               
         EJECT                                                                  
*********************************************************************           
* DCBS ETC                                                          *           
*********************************************************************           
         PRINT NOGEN                                                            
SYSPRINT DCB   DDNAME=SYSPRINT,                                        X        
               DSORG=PS,,                                              X        
               LRECL=133,                                              X        
               BLKSIZE=7980,                                           X        
               MACRF=PM,                                               X        
               RECFM=FBA                                                        
*                                                                               
PRINTOPN OPEN (SYSPRINT,(OUTPUT)),MODE=31,MF=L                                  
*                                                                               
         PRINT GEN                                                              
         LTORG                                                                  
*                                                                               
**PAN#1  CSECT                                                                  
**PAN#1  DC    CL21'002MQIBMSAMP103/06/03'                                      
         END                                                                    
