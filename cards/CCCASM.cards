/*                                                                              
*CATALP CCCASM                                                                  
                                                                                
  This is the C library that interfaces a C application with the DDS            
  assembly language routines. The names of these routines follow the            
  convention of having a 'c' followed by the name of the assembly               
  language routine. A dmcb is allocated inside each routine and freed           
  before returning thus making its use transparent to the application           
  that calls it. In some cases the asm routine will return something            
  in the dmcb and the C routine will pass this back to the application.         
*/                                                                              
                                                                                
#include <standard.h>                                                           
#include <stdio.h>                                                              
#include <dds.h>                                                                
                                                                                
chexout(src,des,len)                                                            
char *src,*des;                                                                 
int len;                                                                        
{                                                                               
    struct dmcb *dptr;                                                          
    int retval;                                                                 
                                                                                
    dptr = calloc(sizeof(struct dmcb),1);                                       
    dptr->p1.address = src;                                                     
    dptr->p2.address = des;                                                     
    dptr->p3.value = len;                                                       
    callasm("HEXOUT  ",dptr);                                                   
    retval = dptr->p5.value;                                                    
    free(dptr);                                                                 
    return(retval);                                                             
}                                                                               
                                                                                
chexin(src,des,len)                                                             
char *src,*des;                                                                 
int len;                                                                        
{                                                                               
    struct dmcb *dptr;                                                          
    int retval;                                                                 
                                                                                
    dptr = calloc(sizeof(struct dmcb),1);                                       
    dptr->p1.address = src;                                                     
    dptr->p2.address = des;                                                     
    dptr->p3.value = len;                                                       
    callasm("HEXIN   ",dptr);                                                   
    retval = dptr->p4.value;                                                    
    free(dptr);                                                                 
    return(retval);                                                             
}                                                                               
                                                                                
cdecode(src,des)                                                                
char *src,*des;                                                                 
{                                                                               
    struct dmcb *dptr;                                                          
    int retval;                                                                 
                                                                                
    dptr = calloc(sizeof(struct dmcb),1);                                       
    dptr->p1.address = src;                                                     
    dptr->p2.address = des;                                                     
    callasm("DECODE  ",dptr);                                                   
    retval = dptr->p4.compos.byte0;                                             
    free(dptr);                                                                 
    return(retval);                                                             
}                                                                               
                                                                                
cdatcon(src,stype,des,dtype)                                                    
char *src,*des;                                                                 
int stype,dtype;                                                                
{                                                                               
    struct dmcb *dptr;                                                          
                                                                                
    dptr = calloc(sizeof(struct dmcb),1);                                       
    dptr->p1.address = src;                                                     
    dptr->p1.compos.byte0 = stype;                                              
    dptr->p2.address = des;                                                     
    dptr->p2.compos.byte0 = dtype;                                              
    callasm("DATCON  ",dptr);                                                   
    free(dptr);                                                                 
}                                                                               
                                                                                
cloader(system,program,overlay,address)                                         
int system,program,overlay;                                                     
char *address;                                                                  
{                                                                               
    struct dmcb *dptr;                                                          
    char phase(:9:);                                                            
    int retval;                                                                 
                                                                                
    dptr = calloc(sizeof(struct dmcb),1);                                       
    sprintf(phase+1,"%X  ",65536*system+256*program+overlay);                   
    phase(:0:) = 'T';                                                           
    dptr->p1.address = phase;                                                   
    dptr->p2.address = address;                                                 
    dptr->p3.address = address;                                                 
    dptr->p3.compos.byte0 = 'A';                                                
    callasm("LOADER  ",dptr);                                                   
    retval = dptr->p1.value;                                                    
    free(dptr);                                                                 
    return(retval);                                                             
}                                                                               
                                                                                
cprinter()                                                                      
{                                                                               
    callasm("PRINTER ",0);                                                      
}                                                                               
                                                                                
calldatamgr(bptr)                                                               
struct dmblock *bptr;                                                           
{                                                                               
    struct dmcb *dptr;                                                          
                                                                                
    dptr = &bptr->dmdmcb;                                                       
    dptr->p1.compos.byte0 = bptr->getflag;                                      
    dptr->p3.compos.byte0 = 0;                                                  
    callasm("DATAMGR ",dptr);                                                   
    bptr->retflag = dptr->p3.compos.byte0;                                      
}                                                                               
                                                                                
callasm(command,dptr)                                                           
char *command;                                                                  
struct dmcb *dptr;                                                              
{                                                                               
    int condcode;                                                               
                                                                                
    condcode = chook(command,dptr);                                             
    switch(condcode){                                                           
      case 1:                                                                   
        fatalerror("    %s not found in command table",command);                
        break;                                                                  
      case 2:                                                                   
        fatalerror("    %s not resolved by linkage editor",command);            
        break;                                                                  
      default:                                                                  
        break;                                                                  
    }                                                                           
}                                                                               
                                                                                
fatalerror(cntstr,s)                                                            
char *cntstr,*s;                                                                
{                                                                               
     printf("**********************************************\n");                
     printf(cntstr,s);                                                          
     printf("\n**********************************************\n");              
     exit(1);                                                                   
}                                                                               
