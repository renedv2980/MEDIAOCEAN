/*                                                                              
*CATALP CCDMOPEN                                                                
*/                                                                              
                                                                                
#include <standard.h>                                                           
#include <stdio.h>                                                              
#include <dds.h>                                                                
                                                                                
extern char utl(::);                                                            
extern char helen(::),helendir(::);             /*from ddhelen*/                
                                                                                
struct dmblock *dmopen(sysname,file,action)                                     
char *sysname,*file,action;                                                     
/*                                                                              
  This routine issues a call to datamgr to do a DMOPEN on the directory-        
  file pair specified by file. In addition it allocates a block of              
  storage for the key and ioareas to be used by subsequent datamgr              
  calls as well as a dmcb and other information pertanant to datamgr.           
  It points a structure of type dmblock to this strorageand returns             
  this pointer to the calling routine. The application can then use             
  this structure to access the key and ioareas and to make further              
  calls to datamgr.                                                             
*/                                                                              
{                                                                               
    struct dmblock *bptr;           /*points to dsect for file info*/           
    struct dmcb *dptr;              /*points to dmcb*/                          
    char longname(:8:);             /*long version of system name*/             
    char truncname(:4:);            /*first three letters of sysname*/          
    char filelist(:20:);            /*files to be opened*/                      
    char *ptr;                      /*moves through tables*/                    
    char sysovnum;                  /*used to find longname*/                   
                                                                                
    char getsysnum(),getsysovnum(),*getlongname();                              
                                                                                
    if(utl != NULL)                                                             
        if(utl(:4:) == 0)                                                       
            utl(:4:) = getsysnum(sysname);                                      
                                                                                
    memcpy(truncname,sysname,3);            /*find longname that*/              
    truncname(:3:) = NULL;                  /*corresponds to actual*/           
    sysovnum = getsysovnum(truncname);      /*sysname passed by user*/          
    getlongname(sysovnum,longname);                                             
                                                                                
    bptr = malloc(sizeof(struct dmblock));  /*allocates dmblock*/               
                                                                                
    sprintf(bptr->dir,"%sDIR",file);          /*directory name*/                
    sprintf(bptr->fil,"%sFIL",file);            /*file name*/                   
                                                                                
         /* search helen table for filename */                                  
    for(ptr = helen ; memcmp(bptr->fil,ptr+1,6) ; ptr += 13)                    
        if(ptr(:0:) == 0xff)                   /*end of table marker*/          
            fatalerror("bad file name:%s",bptr->fil);                           
    bptr->maxreclen = 256*ptr(:9:)+ptr(:10:);                                   
    bptr->firsteldisp = ptr(:11:);                                              
                                                                                
         /* search helendir table for directory name */                         
    for(ptr = helendir ; memcmp(bptr->dir,ptr+1,6) ; ptr += 11)                 
        if(ptr(:0:) == 0xff)                   /*end of table marker*/          
            fatalerror("bad directory name:%s",bptr->fil);                      
    bptr->keylen = ptr(:9:);                   /*key length*/                   
    bptr->diskadisp = ptr(:10:);           /*displacement to diskadd*/          
                                                                                
    bptr->key = malloc(42);                   /*key area*/                      
    bptr->keysave = malloc(42);               /*keysave area*/                  
    bptr->ioarea = malloc(bptr->maxreclen);   /*ioarea*/                        
    bptr->workarea = malloc(12*8);          /*12 doubleword work area*/         
    bptr->getflag = 0;                        /*byte0 of dmcbw1*/               
                                                                                
        /* form filelist from system,directory,file */                          
    sprintf(filelist,"%c%s %c%s X",action,bptr->dir,action,bptr->fil);          
    if(action == 'U'){                                                          
        filelist(:16:) = 'U';              /*add recovery to filelist*/         
        memcpy(filelist+17,longname,3);                                         
        memcpy(filelist+20,"RCV X",6);                                          
        bptr->getflag = 0x80;              /*allow updates on records*/         
        strcpy(filelist,"UGENDIR UGENFIL UCTRCVR X");                           
    }                                                                           
                                                                                
    dptr = &bptr->dmdmcb;                   /*sets up dmcb*/                    
    dptr->p1.address = "DMOPEN";                                                
    dptr->p2.address = longname;                                                
    dptr->p3.address = filelist;                                                
    dptr->p4.address = bptr->ioarea;                                            
    calldatamgr(bptr);                                                          
    return(bptr);                                                               
}                                                                               
